swagger: '2.0'
info:
  title: Shipping MC
  version: "0.1"
  description: Shipping Microservice
consumes:
  - application/json
produces:
  - application/json
basePath: "/api/shipping"
paths:
  /order/create:
    post:
      tags: [ Order ]
      operationId: endpoints.order_endpoints.create_order
      summary: Creating an order
      parameters:
        - $ref: '#/parameters/createorder_body'
      responses:
        200:
          description: The order was successfully created!
        409:
          description: The order already exists!

  /courier/create:
    post:
      tags: [ Courier ]
      operationId: endpoints.courier_endpoints.add_courier
      summary: Creating a courier
      parameters:
        - $ref: '#/parameters/courier_body'
      responses:
        200:
          description: Courier was successfully created!
        409:
          description: Courier already exists!

  /order/user/{id}:
    get:
      tags: [ Order ]
      operationId: endpoints.order_endpoints.find_user_order
      summary: Finding user's order
      parameters:
        - $ref: '#/parameters/id'
      responses:
        200:
          description: Return order
        404:
          description: Does not exist

  /order/edit/{id}:
    put:
      tags: [ Order ]
      operationId: endpoints.order_endpoints.edit_order
      summary: Editing/updating an order
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/createorder_body'
      responses:
        200:
          description: The order was successfully edited!
        404:
          description: Not found

  /courier/edit/{id}:
    put:
      tags: [ Courier ]
      operationId: endpoints.courier_endpoints.edit_courier
      summary: Updating courier's information
      parameters:
        - $ref: '#/parameters/id'
        - $ref: '#/parameters/courier_body'
      responses:
        200:
          description: Courier was successfully edited!
        404:
          description: Not found

  /courier/listall:
    get:
      tags: [ Courier ]
      operationId: endpoints.courier_endpoints.list_couriers
      summary: Listing all couriers
      responses:
        200:
          description: Return list of Couriers
        404:
          description: Does not exist

  /order/listall:
    get:
      tags: [ Order ]
      operationId: endpoints.order_endpoints.list_orders
      summary: Listing all orders
      responses:
        200:
          description: Return list of Orders
        404:
          description: Does not exist

  /order/delete/{id}:
    delete:
      tags: [ Order ]
      operationId: endpoints.order_endpoints.delete_order
      summary: Deleting an order
      parameters:
        - $ref: '#parameters/id'
      responses:
        200:
          description: Order is deleted successfully!
        404:
          description: Not found

  /courier/delete/{id}:
    delete:
      tags: [ Courier ]
      operationId: endpoints.courier_endpoints.delete_courier
      summary: Deleting a courier
      parameters:
        - $ref: '#parameters/id'
      responses:
        200:
          description: Courier is deleted successfully!
        404:
          description: Not found

  /updateorderstate/{id}:
    put:
      tags: [ Order ]
      operationId: endpoints.order_endpoints.updateorderstate
      summary: Updating order state
      parameters:
        - $ref: '#parameters/id'
      responses:
        200:
          description: Order state is updated successfully!
        404:
          description: Error

parameters:
  id:
    name: id
    description: Identification
    in: path
    type: integer
    required: true

  createorder_body:
    name: createorder_body
    description: Creating an order
    in: body
    schema:
      required:
        - id
        - userId
        - delivery_time
        - courier_assigned
        - priority
        - order_state
        - description

      properties:
        id:
          type: integer
        userId:
          type: integer
        delivery_time:
          type: string
        priority:
          type: boolean
        description:
          type: string
        courier_assigned:
          type: integer
        order_state:
          type: string

  courier_body:
    name: courier_body
    description: Creating a courier
    in: body
    schema:
      required:
        - id
        - name
        - location
      properties:
        id:
          type: integer
        name:
          type: string
        location:
          type: string
